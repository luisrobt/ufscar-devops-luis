version: '3'

volumes:
  pm_data: {}
  gf_data: {}

services:

  proxy:
    image: paulushc/ufscar-devops-paulushc:1.0.1
    ports: 
      - 8080:80
    depends_on: 
      - backend
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  fe:
    image: paulushc/ufscar-devops-front
    ports: 
      - 8081:80
    depends_on: 
      - backend
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
  
  postgres:
    image: postgres
    ports: 
      - '5432:5432'
    environment:
      POSTGRES_DB: ufscar
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root

  mysql:
    image: 'mariadb:10.1'    
    environment:
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    image: paulushc/ufscar-devops-back:1.0.0
    environment: 
      - APPPROFILE=mysql    
    volumes: 
      - /d/Repos/ufscar/ufscar-devops-paulushc/ambiente/config/backend/:/opt/service/backend/config/:ro
    depends_on: 
      - mysql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro    
    restart: always
    
  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"    
    restart: always
    
  alertmanager:
    image: prom/alertmanager    
    volumes:
      - ./config/alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    
  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - pm_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'    
    links:
      - backend
      - cadvisor:cadvisor
      - node-exporter
      - alertmanager:alertmanager
    depends_on:
      - backend
      - cadvisor
      - node-exporter
      - alertmanager
    restart: always
      
  grafana:
    image: grafana/grafana
    user: "104"
    links: 
      - prometheus
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - gf_data:/var/lib/grafana
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./config/grafana/config.monitoring
    restart: always
